@model IEnumerable<dynamic>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/supervisor.css">
    <link rel="stylesheet" href="~/css/background.css">
</head>
<body>
    <div class="area">
        <ul class="circles">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>

    <header class="main-header">
        <button id="logoutButton" class="logout-button">
            <img src="~/images/log-out.png" alt="Cerrar Sesión" class="logout-icon" />
        </button>
        <div class="header-title">
          <div class="title-wrapper">
                <h1 class="header-title">Auditoría Mensual de Químicos - Aprobación Almacen</h1>
        </div>
    </header>

    <main>
        <table class="audit-table">
            <thead>
                <tr>
                    <th>Fecha de Auditoría</th>
                    <th>Estado de Aprobación Almacen</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var group in Model)
                {
                    var quimicosList = (IEnumerable<dynamic>)group.Quimicos;

                    var isApprovedIncoming = quimicosList.All(q =>
                    {
                        var aprobacionesList = (IEnumerable<dynamic>)q.Aprobaciones;
                        return aprobacionesList.Any(a => a.ApprovedByIncoming != null);
                    });

                    var isApprovedStorage = quimicosList.All(q =>
                    {
                        var aprobacionesList = (IEnumerable<dynamic>)q.Aprobaciones;
                        return aprobacionesList.Any(a => a.ApprovedByStorage != null);
                    });

                        <tr>
                            <td>@group.AuditDate.ToString("MM-dd-yyyy")</td>
                            <td>
                            @if (isApprovedStorage)
                            {
                                        <span class="approved-storage">Aprobado</span>
                            }
                            else if (isApprovedIncoming)
                            {
                                        <span class="pending-storage">Pendiente de Aprobación</span>
                            }
                            else
                            {
                                        <span class="not-approved">Aprobación pendiente por Incoming</span>
                            }
                            </td>
                            <td class="action-cell">
                                <a href="@Url.Action("Details", "Details", new { date = DateTime.Parse(group.AuditDate.ToString()).ToString("yyyy-MM-dd") })" class="details-btn">Ver Detalles</a>

                            @if (isApprovedIncoming && !isApprovedStorage)
                            {
                                        <button class="approve-btn" data-date="@group.AuditDate.ToString("yyyy-MM-dd")" data-role="Storage">Aprobar</button>
                            }
                            else if (!isApprovedIncoming)
                            {
                                        <button class="approve-btn" disabled>Pendiente</button>
                            }
                            else
                            {
                                        <button class="approve-btn" disabled>Aprobado</button>
                            }
                            </td>
                        </tr>
                }
            </tbody>
        </table>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="~/js/supervisor.js"></script>
    <script src="~/js/sesionkiller.js"></script>
</body>
</html>
